"""Initial migration with DataFile, Annotation, ProcessingResult models

Revision ID: 79466b207f96
Revises: 
Create Date: 2025-05-26 10:12:47.563823

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel # Added import for sqlmodel


# revision identifiers, used by Alembic.
revision: str = '79466b207f96'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('datafile',
    sa.Column('filename', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('upload_date', sa.DateTime(), nullable=False),
    sa.Column('s3_path', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('file_metadata', sa.JSON(), nullable=True),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_datafile_filename'), 'datafile', ['filename'], unique=False)
    op.create_index(op.f('ix_datafile_id'), 'datafile', ['id'], unique=False)
    op.create_table('annotation',
    sa.Column('timestamp_start', sa.Float(), nullable=False),
    sa.Column('timestamp_end', sa.Float(), nullable=False),
    sa.Column('annotation_type', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('label', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('data_file_id', sa.Uuid(), nullable=False),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.ForeignKeyConstraint(['data_file_id'], ['datafile.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_annotation_data_file_id'), 'annotation', ['data_file_id'], unique=False)
    op.create_index(op.f('ix_annotation_id'), 'annotation', ['id'], unique=False)
    op.create_table('processingresult',
    sa.Column('processing_type', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('parameters', sa.JSON(), nullable=True),
    sa.Column('status', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('result_data', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('data_file_id', sa.Uuid(), nullable=False),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.ForeignKeyConstraint(['data_file_id'], ['datafile.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_processingresult_data_file_id'), 'processingresult', ['data_file_id'], unique=False)
    op.create_index(op.f('ix_processingresult_id'), 'processingresult', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_processingresult_id'), table_name='processingresult')
    op.drop_index(op.f('ix_processingresult_data_file_id'), table_name='processingresult')
    op.drop_table('processingresult')
    op.drop_index(op.f('ix_annotation_id'), table_name='annotation')
    op.drop_index(op.f('ix_annotation_data_file_id'), table_name='annotation')
    op.drop_table('annotation')
    op.drop_index(op.f('ix_datafile_id'), table_name='datafile')
    op.drop_index(op.f('ix_datafile_filename'), table_name='datafile')
    op.drop_table('datafile')
    # ### end Alembic commands ###
